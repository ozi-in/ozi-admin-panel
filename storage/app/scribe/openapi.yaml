openapi: 3.0.3
info:
  title: '6amMart1745854777 API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:8001'
tags:
  -
    name: Endpoints
    description: ''
paths:
  /api/documentation:
    get:
      summary: 'Display Swagger API page.'
      operationId: displaySwaggerAPIPage
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/documentation could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/documentation could not be found.'
      tags:
        - Endpoints
      security: []
  /api/oauth2-callback:
    get:
      summary: 'Display Oauth2 callback pages.'
      operationId: displayOauth2CallbackPages
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/oauth2-callback could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/oauth2-callback could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/tat:
    get:
      summary: ''
      operationId: getApiV1Tat
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/tat could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/tat could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                origin_lat:
                  type: number
                  description: ''
                  example: 11613.31890586
                  nullable: false
                origin_lng:
                  type: number
                  description: ''
                  example: 11613.31890586
                  nullable: false
                dest_lat:
                  type: number
                  description: ''
                  example: 11613.31890586
                  nullable: false
                dest_lng:
                  type: number
                  description: ''
                  example: 11613.31890586
                  nullable: false
              required:
                - origin_lat
                - origin_lng
                - dest_lat
                - dest_lng
      security: []
  /api/v1/configurations:
    get:
      summary: ''
      operationId: getApiV1Configurations
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/configurations could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/configurations could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/configurations/get-external:
    get:
      summary: ''
      operationId: getApiV1ConfigurationsGetExternal
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/configurations/get-external could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/configurations/get-external could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                drivemond_base_url:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                drivemond_token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                mart_token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - drivemond_base_url
                - drivemond_token
                - mart_token
      security: []
  /api/v1/configurations/store:
    post:
      summary: ''
      operationId: postApiV1ConfigurationsStore
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/terms-and-conditions:
    get:
      summary: ''
      operationId: getApiV1TermsAndConditions
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/terms-and-conditions could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/terms-and-conditions could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/about-us:
    get:
      summary: ''
      operationId: getApiV1AboutUs
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/about-us could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/about-us could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/privacy-policy:
    get:
      summary: ''
      operationId: getApiV1PrivacyPolicy
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/privacy-policy could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/privacy-policy could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/refund-policy:
    get:
      summary: ''
      operationId: getApiV1RefundPolicy
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/refund-policy could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/refund-policy could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/shipping-policy:
    get:
      summary: ''
      operationId: getApiV1ShippingPolicy
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/shipping-policy could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/shipping-policy could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/cancelation:
    get:
      summary: ''
      operationId: getApiV1Cancelation
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/cancelation could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/cancelation could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/zone/list:
    get:
      summary: ''
      operationId: getApiV1ZoneList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/zone/list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/zone/list could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/zone/check:
    get:
      summary: ''
      operationId: getApiV1ZoneCheck
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/zone/check could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/zone/check could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lat:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                lng:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                zone_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - lat
                - lng
                - zone_id
      security: []
  /api/v1/offline_payment_method_list:
    get:
      summary: ''
      operationId: getApiV1Offline_payment_method_list
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/offline_payment_method_list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/offline_payment_method_list could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/auth/sign-up:
    post:
      summary: ''
      operationId: postApiV1AuthSignUp
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                email:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - name
                - phone
                - password
      security: []
  /api/v1/auth/login:
    post:
      summary: ''
      operationId: postApiV1AuthLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login_type:
                  type: string
                  description: ''
                  example: manual
                  nullable: false
                  enum:
                    - manual
                    - otp
                    - social
              required:
                - login_type
      security: []
  /api/v1/auth/external-login:
    post:
      summary: ''
      operationId: postApiV1AuthExternalLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                token:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: mqeopfuudtdsufvyvddqamniihfqcoynlazghdtqtqxbajwbpilpmufinllwloauydlsmsjury
                  nullable: false
              required:
                - phone
                - token
      security: []
  /api/v1/auth/verify-phone:
    post:
      summary: ''
      operationId: postApiV1AuthVerifyPhone
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                otp:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                verification_type:
                  type: string
                  description: ''
                  example: email
                  nullable: false
                  enum:
                    - phone
                    - email
                phone:
                  type: string
                  description: 'This field is required when <code>verification_type</code> is <code>phone</code>. Must be at least 9 characters. Must not be greater than 14 characters.'
                  example: qeopfuudtdsu
                  nullable: false
                email:
                  type: string
                  description: 'This field is required when <code>verification_type</code> is <code>email</code>. Must be a valid email address.'
                  example: schultz.robyn@example.com
                  nullable: false
                login_type:
                  type: string
                  description: ''
                  example: manual
                  nullable: false
                  enum:
                    - manual
                    - otp
              required:
                - otp
                - verification_type
                - login_type
      security: []
  /api/v1/auth/update-info:
    post:
      summary: ''
      operationId: postApiV1AuthUpdateInfo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                login_type:
                  type: string
                  description: ''
                  example: otp
                  nullable: false
                  enum:
                    - otp
                    - social
                    - manual
                phone:
                  type: string
                  description: 'Must be at least 9 characters. Must not be greater than 14 characters.'
                  example: qeopfuudtdsu
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: schultz.robyn@example.com
                  nullable: false
              required:
                - name
                - login_type
                - phone
                - email
      security: []
  /api/v1/auth/firebase-verify-token:
    post:
      summary: ''
      operationId: postApiV1AuthFirebaseVerifyToken
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                session_info:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                otp:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                login_type:
                  type: string
                  description: ''
                  example: otp
                  nullable: false
                  enum:
                    - manual
                    - otp
              required:
                - session_info
                - phone
                - otp
                - login_type
      security: []
  /api/v1/auth/forgot-password:
    post:
      summary: ''
      operationId: postApiV1AuthForgotPassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                verification_method:
                  type: string
                  description: ''
                  example: phone
                  nullable: false
                  enum:
                    - phone
                    - email
                phone:
                  type: string
                  description: 'This field is required when <code>verification_method</code> is <code>phone</code>.'
                  example: null
                  nullable: false
                email:
                  type: string
                  description: 'This field is required when <code>verification_method</code> is <code>email</code>.'
                  example: null
                  nullable: false
              required:
                - verification_method
      security: []
  /api/v1/auth/verify-token:
    post:
      summary: ''
      operationId: postApiV1AuthVerifyToken
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reset_token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                verification_method:
                  type: string
                  description: ''
                  example: email
                  nullable: false
                  enum:
                    - phone
                    - email
                phone:
                  type: string
                  description: 'This field is required when <code>verification_method</code> is <code>phone</code>. Must be at least 9 characters.'
                  example: qeopfuudtdsufvyvddqamniihfqcoynlazghdtqtqxbajwbpilpmufinllwloauydlsmsjuryvo
                  nullable: true
                email:
                  type: string
                  description: 'This field is required when <code>verification_method</code> is <code>email</code>.'
                  example: null
                  nullable: true
              required:
                - reset_token
                - verification_method
      security: []
  /api/v1/auth/reset-password:
    put:
      summary: ''
      operationId: putApiV1AuthResetPassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reset_token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                verification_method:
                  type: string
                  description: ''
                  example: email
                  nullable: false
                  enum:
                    - phone
                    - email
                phone:
                  type: string
                  description: 'This field is required when <code>verification_method</code> is <code>phone</code>. The <code>phone</code> of an existing record in the users table. Must be at least 9 characters.'
                  example: qeopfuudtdsufvyvddqamniihfqcoynlazghdtqtqxbajwbpilpmufinllwloauydlsmsjuryvo
                  nullable: true
                email:
                  type: string
                  description: 'This field is required when <code>verification_method</code> is <code>email</code>. The <code>email</code> of an existing record in the users table.'
                  example: null
                  nullable: true
                confirm_password:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: consequatur
                  nullable: false
              required:
                - reset_token
                - password
                - verification_method
                - confirm_password
      security: []
  /api/v1/auth/firebase-reset-password:
    put:
      summary: ''
      operationId: putApiV1AuthFirebaseResetPassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionInfo:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                phoneNumber:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                code:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - sessionInfo
                - phoneNumber
                - code
      security: []
  /api/v1/auth/guest/request:
    post:
      summary: ''
      operationId: postApiV1AuthGuestRequest
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/auth/delivery-man/login:
    post:
      summary: ''
      operationId: postApiV1AuthDeliveryManLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: '[2UZ5ij-e/dl4'
                  nullable: false
              required:
                - phone
                - password
      security: []
  /api/v1/auth/delivery-man/store:
    post:
      summary: ''
      operationId: postApiV1AuthDeliveryManStore
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                f_name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                identity_type:
                  type: string
                  description: ''
                  example: passport
                  nullable: false
                  enum:
                    - passport
                    - driving_license
                    - nid
                identity_number:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                email:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                phone:
                  type: string
                  description: 'Must match the regex /^([0-9\s\-\+\(\)]*)$/. Must be at least 10 characters.'
                  example: mqeopfuudtdsufvyvddqamniihfqcoynlazghdtqtqxbajwbpilpmufinllwloauydlsmsjuryv
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                zone_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                vehicle_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                earning:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - f_name
                - identity_type
                - identity_number
                - email
                - phone
                - password
                - zone_id
                - vehicle_id
                - earning
      security: []
  /api/v1/auth/delivery-man/forgot-password:
    post:
      summary: ''
      operationId: postApiV1AuthDeliveryManForgotPassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - phone
      security: []
  /api/v1/auth/delivery-man/verify-token:
    post:
      summary: ''
      operationId: postApiV1AuthDeliveryManVerifyToken
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  description: 'Must match the regex /^([0-9\s\-\+\(\)]*)$/. Must be at least 10 characters.'
                  example: vmqeopfuudtdsufvyvddqamniihfqcoynlazghdtqtqxbajwbpilpmufinllwloauydlsmsjury
                  nullable: false
                reset_token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - phone
                - reset_token
      security: []
  /api/v1/auth/delivery-man/firebase-verify-token:
    post:
      summary: ''
      operationId: postApiV1AuthDeliveryManFirebaseVerifyToken
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionInfo:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                phoneNumber:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                code:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - sessionInfo
                - phoneNumber
                - code
      security: []
  /api/v1/auth/delivery-man/reset-password:
    put:
      summary: ''
      operationId: putApiV1AuthDeliveryManResetPassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  description: 'Must match the regex /^([0-9\s\-\+\(\)]*)$/. Must be at least 10 characters.'
                  example: vmqeopfuudtdsufvyvddqamniihfqcoynlazghdtqtqxbajwbpilpmufinllwloauydlsmsjury
                  nullable: false
                reset_token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                confirm_password:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: consequatur
                  nullable: false
              required:
                - phone
                - reset_token
                - password
                - confirm_password
      security: []
  /api/v1/auth/vendor/login:
    post:
      summary: ''
      operationId: postApiV1AuthVendorLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: '[2UZ5ij-e/dl4'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/v1/auth/vendor/forgot-password:
    post:
      summary: ''
      operationId: postApiV1AuthVendorForgotPassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - email
      security: []
  /api/v1/auth/vendor/verify-token:
    post:
      summary: ''
      operationId: postApiV1AuthVendorVerifyToken
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The <code>email</code> of an existing record in the vendors table.'
                  example: consequatur
                  nullable: false
                reset_token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - email
                - reset_token
      security: []
  /api/v1/auth/vendor/reset-password:
    put:
      summary: ''
      operationId: putApiV1AuthVendorResetPassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The <code>email</code> of an existing record in the vendors table.'
                  example: consequatur
                  nullable: false
                reset_token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                confirm_password:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: consequatur
                  nullable: false
              required:
                - email
                - reset_token
                - password
                - confirm_password
      security: []
  /api/v1/auth/vendor/register:
    post:
      summary: ''
      operationId: postApiV1AuthVendorRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                f_name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: vmqeopfuudtdsufvyvddq
                  nullable: false
                l_name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: amniihfqcoynlazghdtqt
                  nullable: true
                latitude:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                longitude:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                email:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                phone:
                  type: string
                  description: 'Must match the regex /^([0-9\s\-\+\(\)]*)$/. Must be at least 10 characters. Must not be greater than 20 characters.'
                  example: mqeopfuudtdsufvyv
                  nullable: false
                minimum_delivery_time:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                maximum_delivery_time:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                delivery_time_type:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                zone_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                module_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                logo:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                tax:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - f_name
                - latitude
                - longitude
                - email
                - phone
                - minimum_delivery_time
                - maximum_delivery_time
                - delivery_time_type
                - password
                - zone_id
                - module_id
                - logo
                - tax
      security: []
  /api/v1/auth/social-login:
    post:
      summary: ''
      operationId: postApiV1AuthSocialLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                unique_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                email:
                  type: string
                  description: 'This field is required when <code>medium</code> is <code>google</code> or <code>facebook</code>.'
                  example: null
                  nullable: false
                medium:
                  type: string
                  description: ''
                  example: google
                  nullable: false
                  enum:
                    - google
                    - facebook
                    - apple
              required:
                - token
                - unique_id
                - medium
      security: []
  /api/v1/auth/social-register:
    post:
      summary: ''
      operationId: postApiV1AuthSocialRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                unique_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                email:
                  type: string
                  description: 'This field is required when <code>medium</code> is <code>google</code> or <code>facebook</code>.'
                  example: null
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                medium:
                  type: string
                  description: ''
                  example: google
                  nullable: false
                  enum:
                    - google
                    - facebook
                    - apple
              required:
                - token
                - unique_id
                - phone
                - medium
      security: []
  /api/v1/vendor/package-view:
    get:
      summary: ''
      operationId: getApiV1VendorPackageView
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/package-view could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/package-view could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/business_plan:
    post:
      summary: ''
      operationId: postApiV1VendorBusiness_plan
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                payment:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                business_plan:
                  type: string
                  description: ''
                  example: commission
                  nullable: false
                  enum:
                    - subscription
                    - commission
                package_id:
                  type: string
                  description: 'This field is required when <code>business_plan</code> is <code>subscription</code>.'
                  example: null
                  nullable: true
                payment_gateway:
                  type: string
                  description: 'This field is required when <code>business_plan</code> is <code>subscription</code>.'
                  example: null
                  nullable: true
                payment_platform:
                  type: string
                  description: ''
                  example: app
                  nullable: true
                  enum:
                    - app
                    - web
              required:
                - store_id
                - business_plan
      security: []
  /api/v1/vendor/cancel-subscription:
    post:
      summary: ''
      operationId: postApiV1VendorCancelSubscription
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                subscription_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - store_id
                - subscription_id
      security: []
  /api/v1/vendor/check-product-limits:
    get:
      summary: ''
      operationId: getApiV1VendorCheckProductLimits
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/check-product-limits could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/check-product-limits could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                package_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - store_id
                - package_id
      security: []
  /api/v1/module:
    get:
      summary: ''
      operationId: getApiV1Module
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/module could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/module could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/newsletter/subscribe:
    post:
      summary: ''
      operationId: postApiV1NewsletterSubscribe
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: qkunze@example.com
                  nullable: false
              required:
                - email
      security: []
  /api/v1/landing-page:
    get:
      summary: ''
      operationId: getApiV1LandingPage
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/landing-page could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/landing-page could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/react-landing-page:
    get:
      summary: ''
      operationId: getApiV1ReactLandingPage
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/react-landing-page could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/react-landing-page could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/flutter-landing-page:
    get:
      summary: ''
      operationId: getApiV1FlutterLandingPage
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/flutter-landing-page could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/flutter-landing-page could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/delivery-man/last-location:
    get:
      summary: ''
      operationId: getApiV1DeliveryManLastLocation
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/delivery-man/last-location could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/delivery-man/last-location could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - order_id
      security: []
  '/api/v1/delivery-man/reviews/{delivery_man_id}':
    get:
      summary: ''
      operationId: getApiV1DeliveryManReviewsDelivery_man_id
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/delivery-man/reviews/consequatur could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/delivery-man/reviews/consequatur could not be found.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: delivery_man_id
        description: 'The ID of the delivery man.'
        example: consequatur
        required: true
        schema:
          type: string
  '/api/v1/delivery-man/reviews/rating/{delivery_man_id}':
    get:
      summary: ''
      operationId: getApiV1DeliveryManReviewsRatingDelivery_man_id
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/delivery-man/reviews/rating/consequatur could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/delivery-man/reviews/rating/consequatur could not be found.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: delivery_man_id
        description: 'The ID of the delivery man.'
        example: consequatur
        required: true
        schema:
          type: string
  /api/v1/delivery-man/reviews/submit:
    post:
      summary: ''
      operationId: postApiV1DeliveryManReviewsSubmit
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                delivery_man_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                order_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                comment:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                rating:
                  type: number
                  description: 'Must not be greater than 5.'
                  example: 3
                  nullable: false
              required:
                - delivery_man_id
                - order_id
                - comment
                - rating
      security: []
  /api/v1/delivery-man/profile:
    get:
      summary: ''
      operationId: getApiV1DeliveryManProfile
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/delivery-man/profile could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/delivery-man/profile could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/delivery-man/notifications:
    get:
      summary: ''
      operationId: getApiV1DeliveryManNotifications
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/delivery-man/notifications could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/delivery-man/notifications could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/delivery-man/update-profile:
    put:
      summary: ''
      operationId: putApiV1DeliveryManUpdateProfile
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                f_name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                l_name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                email:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: null
                  nullable: true
              required:
                - f_name
                - l_name
      security: []
  /api/v1/delivery-man/update-active-status:
    post:
      summary: ''
      operationId: postApiV1DeliveryManUpdateActiveStatus
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/delivery-man/current-orders:
    get:
      summary: ''
      operationId: getApiV1DeliveryManCurrentOrders
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/delivery-man/current-orders could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/delivery-man/current-orders could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/delivery-man/latest-orders:
    get:
      summary: ''
      operationId: getApiV1DeliveryManLatestOrders
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/delivery-man/latest-orders could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/delivery-man/latest-orders could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/delivery-man/record-location-data:
    post:
      summary: ''
      operationId: postApiV1DeliveryManRecordLocationData
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/delivery-man/all-orders:
    get:
      summary: ''
      operationId: getApiV1DeliveryManAllOrders
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/delivery-man/all-orders could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/delivery-man/all-orders could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - limit
                - offset
      security: []
  /api/v1/delivery-man/order-delivery-history:
    get:
      summary: ''
      operationId: getApiV1DeliveryManOrderDeliveryHistory
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/delivery-man/order-delivery-history could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/delivery-man/order-delivery-history could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - order_id
      security: []
  /api/v1/delivery-man/accept-order:
    put:
      summary: ''
      operationId: putApiV1DeliveryManAcceptOrder
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the orders table.'
                  example: consequatur
                  nullable: false
              required:
                - order_id
      security: []
  /api/v1/delivery-man/update-order-status:
    put:
      summary: ''
      operationId: putApiV1DeliveryManUpdateOrderStatus
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                status:
                  type: string
                  description: ''
                  example: canceled
                  nullable: false
                  enum:
                    - confirmed
                    - canceled
                    - picked_up
                    - delivered
                    - handover
                reason:
                  type: string
                  description: 'This field is required when <code>status</code> is <code>canceled</code>.'
                  example: null
                  nullable: false
                order_proof:
                  type: object
                  description: 'Must not have more than 5 items.'
                  example: null
                  nullable: false
                  properties: {  }
              required:
                - order_id
                - status
      security: []
  /api/v1/delivery-man/update-payment-status:
    put:
      summary: ''
      operationId: putApiV1DeliveryManUpdatePaymentStatus
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                status:
                  type: string
                  description: ''
                  example: paid
                  nullable: false
                  enum:
                    - paid
              required:
                - order_id
                - status
      security: []
  /api/v1/delivery-man/order-details:
    get:
      summary: ''
      operationId: getApiV1DeliveryManOrderDetails
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/delivery-man/order-details could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/delivery-man/order-details could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - order_id
      security: []
  /api/v1/delivery-man/order:
    get:
      summary: ''
      operationId: getApiV1DeliveryManOrder
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/delivery-man/order could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/delivery-man/order could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - order_id
      security: []
  /api/v1/delivery-man/send-order-otp:
    put:
      summary: ''
      operationId: putApiV1DeliveryManSendOrderOtp
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - order_id
      security: []
  /api/v1/delivery-man/update-fcm-token:
    put:
      summary: ''
      operationId: putApiV1DeliveryManUpdateFcmToken
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fcm_token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - fcm_token
      security: []
  /api/v1/delivery-man/remove-account:
    delete:
      summary: ''
      operationId: deleteApiV1DeliveryManRemoveAccount
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/delivery-man/get-withdraw-method-list:
    get:
      summary: ''
      operationId: getApiV1DeliveryManGetWithdrawMethodList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/delivery-man/get-withdraw-method-list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/delivery-man/get-withdraw-method-list could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/delivery-man/get-disbursement-report:
    get:
      summary: ''
      operationId: getApiV1DeliveryManGetDisbursementReport
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/delivery-man/get-disbursement-report could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/delivery-man/get-disbursement-report could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - limit
                - offset
      security: []
  /api/v1/delivery-man/withdraw-method/list:
    get:
      summary: ''
      operationId: getApiV1DeliveryManWithdrawMethodList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/delivery-man/withdraw-method/list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/delivery-man/withdraw-method/list could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - limit
                - offset
      security: []
  /api/v1/delivery-man/withdraw-method/store:
    post:
      summary: ''
      operationId: postApiV1DeliveryManWithdrawMethodStore
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                withdraw_method_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - withdraw_method_id
      security: []
  /api/v1/delivery-man/withdraw-method/make-default:
    post:
      summary: ''
      operationId: postApiV1DeliveryManWithdrawMethodMakeDefault
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                is_default:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - id
                - is_default
      security: []
  /api/v1/delivery-man/withdraw-method/delete:
    delete:
      summary: ''
      operationId: deleteApiV1DeliveryManWithdrawMethodDelete
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - id
      security: []
  /api/v1/delivery-man/make-collected-cash-payment:
    post:
      summary: ''
      operationId: postApiV1DeliveryManMakeCollectedCashPayment
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_gateway:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                amount:
                  type: number
                  description: 'Must be at least .001.'
                  example: 45
                  nullable: false
                callback:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - payment_gateway
                - amount
                - callback
                - token
      security: []
  /api/v1/delivery-man/make-wallet-adjustment:
    post:
      summary: ''
      operationId: postApiV1DeliveryManMakeWalletAdjustment
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/delivery-man/wallet-payment-list:
    get:
      summary: ''
      operationId: getApiV1DeliveryManWalletPaymentList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/delivery-man/wallet-payment-list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/delivery-man/wallet-payment-list could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/delivery-man/wallet-provided-earning-list:
    get:
      summary: ''
      operationId: getApiV1DeliveryManWalletProvidedEarningList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/delivery-man/wallet-provided-earning-list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/delivery-man/wallet-provided-earning-list could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/delivery-man/message/list:
    get:
      summary: ''
      operationId: getApiV1DeliveryManMessageList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/delivery-man/message/list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/delivery-man/message/list could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/delivery-man/message/search-list:
    get:
      summary: ''
      operationId: getApiV1DeliveryManMessageSearchList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/delivery-man/message/search-list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/delivery-man/message/search-list could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - name
      security: []
  /api/v1/delivery-man/message/details:
    get:
      summary: ''
      operationId: getApiV1DeliveryManMessageDetails
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/delivery-man/message/details could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/delivery-man/message/details could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/delivery-man/message/send:
    post:
      summary: ''
      operationId: postApiV1DeliveryManMessageSend
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/notifications:
    get:
      summary: ''
      operationId: getApiV1VendorNotifications
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/notifications could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/notifications could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/profile:
    get:
      summary: ''
      operationId: getApiV1VendorProfile
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/profile could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/profile could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/update-active-status:
    post:
      summary: ''
      operationId: postApiV1VendorUpdateActiveStatus
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/earning-info:
    get:
      summary: ''
      operationId: getApiV1VendorEarningInfo
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/earning-info could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/earning-info could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/update-profile:
    put:
      summary: ''
      operationId: putApiV1VendorUpdateProfile
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                f_name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                l_name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: null
                  nullable: true
              required:
                - f_name
                - l_name
      security: []
  /api/v1/vendor/update-announcment:
    put:
      summary: ''
      operationId: putApiV1VendorUpdateAnnouncment
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                announcement_status:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                announcement_message:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: mqeopfuudtdsufvyvddqa
                  nullable: false
              required:
                - announcement_status
                - announcement_message
      security: []
  /api/v1/vendor/current-orders:
    get:
      summary: ''
      operationId: getApiV1VendorCurrentOrders
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/current-orders could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/current-orders could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/schedule-orders:
    get:
      summary: ''
      operationId: getApiV1VendorScheduleOrders
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/schedule-orders could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/schedule-orders could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: integer
                  description: ''
                  example: 17
                  nullable: false
                offset:
                  type: integer
                  description: ''
                  example: 17
                  nullable: false
              required:
                - limit
                - offset
      security: []
  /api/v1/vendor/completed-orders:
    get:
      summary: ''
      operationId: getApiV1VendorCompletedOrders
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/completed-orders could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/completed-orders could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                status:
                  type: string
                  description: ''
                  example: all
                  nullable: false
                  enum:
                    - all
                    - refunded
                    - delivered
              required:
                - limit
                - offset
                - status
      security: []
  /api/v1/vendor/canceled-orders:
    get:
      summary: ''
      operationId: getApiV1VendorCanceledOrders
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/canceled-orders could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/canceled-orders could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - limit
                - offset
      security: []
  /api/v1/vendor/all-orders:
    get:
      summary: ''
      operationId: getApiV1VendorAllOrders
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/all-orders could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/all-orders could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/update-order-status:
    put:
      summary: ''
      operationId: putApiV1VendorUpdateOrderStatus
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                reason:
                  type: string
                  description: 'This field is required when <code>status</code> is <code>canceled</code>.'
                  example: null
                  nullable: false
                status:
                  type: string
                  description: ''
                  example: processing
                  nullable: false
                  enum:
                    - confirmed
                    - processing
                    - handover
                    - delivered
                    - canceled
                order_proof:
                  type: object
                  description: 'Must not have more than 5 items.'
                  example: null
                  nullable: false
                  properties: {  }
              required:
                - order_id
                - status
      security: []
  /api/v1/vendor/update-order-amount:
    put:
      summary: ''
      operationId: putApiV1VendorUpdateOrderAmount
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - order_id
      security: []
  /api/v1/vendor/order-details:
    get:
      summary: ''
      operationId: getApiV1VendorOrderDetails
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/order-details could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/order-details could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - order_id
      security: []
  /api/v1/vendor/order:
    get:
      summary: ''
      operationId: getApiV1VendorOrder
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/order could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/order could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - order_id
      security: []
  /api/v1/vendor/update-fcm-token:
    put:
      summary: ''
      operationId: putApiV1VendorUpdateFcmToken
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fcm_token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - fcm_token
      security: []
  /api/v1/vendor/get-basic-campaigns:
    get:
      summary: ''
      operationId: getApiV1VendorGetBasicCampaigns
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/get-basic-campaigns could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/get-basic-campaigns could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/campaign-leave:
    put:
      summary: ''
      operationId: putApiV1VendorCampaignLeave
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                campaign_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - campaign_id
      security: []
  /api/v1/vendor/campaign-join:
    put:
      summary: ''
      operationId: putApiV1VendorCampaignJoin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                campaign_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - campaign_id
      security: []
  /api/v1/vendor/get-withdraw-list:
    get:
      summary: ''
      operationId: getApiV1VendorGetWithdrawList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/get-withdraw-list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/get-withdraw-list could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/get-items-list:
    get:
      summary: ''
      operationId: getApiV1VendorGetItemsList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/get-items-list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/get-items-list could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/update-bank-info:
    put:
      summary: ''
      operationId: putApiV1VendorUpdateBankInfo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bank_name:
                  type: string
                  description: 'Must not be greater than 191 characters.'
                  example: vmqeopfuudtdsufvyvddq
                  nullable: false
                branch:
                  type: string
                  description: 'Must not be greater than 191 characters.'
                  example: amniihfqcoynlazghdtqt
                  nullable: false
                holder_name:
                  type: string
                  description: 'Must not be greater than 191 characters.'
                  example: qxbajwbpilpmufinllwlo
                  nullable: false
                account_no:
                  type: string
                  description: 'Must not be greater than 191 characters.'
                  example: auydlsmsjuryvojcybzvr
                  nullable: false
              required:
                - bank_name
                - branch
                - holder_name
                - account_no
      security: []
  /api/v1/vendor/request-withdraw:
    post:
      summary: ''
      operationId: postApiV1VendorRequestWithdraw
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  description: 'Must be at least 0.01.'
                  example: 73
                  nullable: false
                id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - amount
                - id
      security: []
  /api/v1/vendor/send-order-otp:
    put:
      summary: ''
      operationId: putApiV1VendorSendOrderOtp
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - order_id
      security: []
  /api/v1/vendor/make-collected-cash-payment:
    post:
      summary: ''
      operationId: postApiV1VendorMakeCollectedCashPayment
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_gateway:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                amount:
                  type: number
                  description: 'Must be at least .001.'
                  example: 45
                  nullable: false
                callback:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - payment_gateway
                - amount
                - callback
      security: []
  /api/v1/vendor/make-wallet-adjustment:
    post:
      summary: ''
      operationId: postApiV1VendorMakeWalletAdjustment
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/wallet-payment-list:
    get:
      summary: ''
      operationId: getApiV1VendorWalletPaymentList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/wallet-payment-list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/wallet-payment-list could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/get-withdraw-method-list:
    get:
      summary: ''
      operationId: getApiV1VendorGetWithdrawMethodList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/get-withdraw-method-list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/get-withdraw-method-list could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/withdraw-method/list:
    get:
      summary: ''
      operationId: getApiV1VendorWithdrawMethodList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/withdraw-method/list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/withdraw-method/list could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - limit
                - offset
      security: []
  /api/v1/vendor/withdraw-method/store:
    post:
      summary: ''
      operationId: postApiV1VendorWithdrawMethodStore
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                withdraw_method_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - withdraw_method_id
      security: []
  /api/v1/vendor/withdraw-method/make-default:
    post:
      summary: ''
      operationId: postApiV1VendorWithdrawMethodMakeDefault
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                is_default:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - id
                - is_default
      security: []
  /api/v1/vendor/withdraw-method/delete:
    delete:
      summary: ''
      operationId: deleteApiV1VendorWithdrawMethodDelete
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - id
      security: []
  /api/v1/vendor/get-expense:
    get:
      summary: ''
      operationId: getApiV1VendorGetExpense
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/get-expense could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/get-expense could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                from:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                to:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - limit
                - offset
                - from
                - to
      security: []
  /api/v1/vendor/get-disbursement-report:
    get:
      summary: ''
      operationId: getApiV1VendorGetDisbursementReport
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/get-disbursement-report could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/get-disbursement-report could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - limit
                - offset
      security: []
  /api/v1/vendor/subscription-transaction:
    get:
      summary: ''
      operationId: getApiV1VendorSubscriptionTransaction
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/subscription-transaction could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/subscription-transaction could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                from:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                to:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - limit
                - offset
                - from
                - to
      security: []
  /api/v1/vendor/remove-account:
    delete:
      summary: ''
      operationId: deleteApiV1VendorRemoveAccount
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/unit:
    get:
      summary: ''
      operationId: getApiV1VendorUnit
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/unit could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/unit could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/update-business-setup:
    put:
      summary: ''
      operationId: putApiV1VendorUpdateBusinessSetup
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contact_number:
                  type: string
                  description: "'name' => 'required',\n'address' => 'required',."
                  example: consequatur
                  nullable: false
                delivery:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                prescription_order:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                take_away:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                schedule_order:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                veg:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                non_veg:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                minimum_order:
                  type: number
                  description: ''
                  example: 11613.31890586
                  nullable: false
                gst:
                  type: string
                  description: 'This field is required when <code>gst_status</code> is <code>1</code>.'
                  example: null
                  nullable: false
                minimum_delivery_time:
                  type: number
                  description: ''
                  example: 11613.31890586
                  nullable: false
                maximum_delivery_time:
                  type: number
                  description: ''
                  example: 11613.31890586
                  nullable: false
                delivery_time_type:
                  type: string
                  description: ''
                  example: min
                  nullable: false
                  enum:
                    - min
                    - hours
                    - days
              required:
                - contact_number
                - delivery
                - prescription_order
                - take_away
                - schedule_order
                - veg
                - non_veg
                - minimum_order
                - minimum_delivery_time
                - maximum_delivery_time
                - delivery_time_type
      security: []
  /api/v1/vendor/schedule/store:
    post:
      summary: ''
      operationId: postApiV1VendorScheduleStore
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                opening_time:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i:s</code>.'
                  example: '11:56:30'
                  nullable: false
                closing_time:
                  type: string
                  description: 'Must be a valid date in the format <code>H:i:s</code>. Must be a date after <code>opening_time</code>.'
                  example: '2106-08-15'
                  nullable: false
              required:
                - opening_time
                - closing_time
      security: []
  '/api/v1/vendor/schedule/{store_schedule}':
    delete:
      summary: ''
      operationId: deleteApiV1VendorScheduleStore_schedule
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: store_schedule
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
  /api/v1/vendor/attributes:
    get:
      summary: ''
      operationId: getApiV1VendorAttributes
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/attributes could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/attributes could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/coupon/list:
    get:
      summary: ''
      operationId: getApiV1VendorCouponList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/coupon/list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/coupon/list could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - limit
                - offset
      security: []
  /api/v1/vendor/coupon/view:
    get:
      summary: ''
      operationId: getApiV1VendorCouponView
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/coupon/view could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/coupon/view could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                coupon_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - coupon_id
      security: []
  /api/v1/vendor/coupon/view-without-translate:
    get:
      summary: ''
      operationId: getApiV1VendorCouponViewWithoutTranslate
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/coupon/view-without-translate could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/coupon/view-without-translate could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                coupon_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - coupon_id
      security: []
  /api/v1/vendor/coupon/store:
    post:
      summary: ''
      operationId: postApiV1VendorCouponStore
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: vmqeopfuudtdsufvyvddq
                  nullable: false
                start_date:
                  type: string
                  description: "'title' => 'required|max:191',."
                  example: consequatur
                  nullable: false
                expire_date:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                coupon_type:
                  type: string
                  description: ''
                  example: default
                  nullable: false
                  enum:
                    - free_delivery
                    - default
                discount:
                  type: string
                  description: 'This field is required when <code>coupon_type</code> is <code>default</code>.'
                  example: null
                  nullable: false
              required:
                - code
                - start_date
                - expire_date
                - coupon_type
      security: []
  /api/v1/vendor/coupon/update:
    post:
      summary: ''
      operationId: postApiV1VendorCouponUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                coupon_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                code:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                start_date:
                  type: string
                  description: "'title' => 'required|max:191',."
                  example: consequatur
                  nullable: false
                expire_date:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                discount:
                  type: string
                  description: 'This field is required when <code>coupon_type</code> is <code>default</code>.'
                  example: null
                  nullable: false
                coupon_type:
                  type: string
                  description: ''
                  example: default
                  nullable: false
                  enum:
                    - free_delivery
                    - default
              required:
                - coupon_id
                - start_date
                - expire_date
                - coupon_type
      security: []
  /api/v1/vendor/coupon/status:
    post:
      summary: ''
      operationId: postApiV1VendorCouponStatus
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                coupon_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                status:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - coupon_id
                - status
      security: []
  /api/v1/vendor/coupon/delete:
    post:
      summary: ''
      operationId: postApiV1VendorCouponDelete
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                coupon_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - coupon_id
      security: []
  /api/v1/vendor/coupon/search:
    post:
      summary: ''
      operationId: postApiV1VendorCouponSearch
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                search:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - search
                - limit
                - offset
      security: []
  /api/v1/vendor/advertisement:
    get:
      summary: ''
      operationId: getApiV1VendorAdvertisement
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/advertisement could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/advertisement could not be found.'
      tags:
        - Endpoints
      security: []
  '/api/v1/vendor/advertisement/details/{id}':
    get:
      summary: ''
      operationId: getApiV1VendorAdvertisementDetailsId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/advertisement/details/consequatur could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/advertisement/details/consequatur could not be found.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the detail.'
        example: consequatur
        required: true
        schema:
          type: string
  '/api/v1/vendor/advertisement/delete/{id}':
    delete:
      summary: ''
      operationId: deleteApiV1VendorAdvertisementDeleteId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the delete.'
        example: consequatur
        required: true
        schema:
          type: string
  /api/v1/vendor/advertisement/store:
    post:
      summary: ''
      operationId: postApiV1VendorAdvertisementStore
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vmqeopfuudtdsufvyvddq
                  nullable: true
                description:
                  type: string
                  description: 'Must not be greater than 65000 characters.'
                  example: 'Dolores molestias ipsam sit.'
                  nullable: true
                dates:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                advertisement_type:
                  type: string
                  description: ''
                  example: store_promotion
                  nullable: false
                  enum:
                    - video_promotion
                    - store_promotion
                cover_image:
                  type: string
                  format: binary
                  description: 'This field is required when <code>advertisement_type</code> is <code>store_promotion</code>. Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
                profile_image:
                  type: string
                  format: binary
                  description: 'This field is required when <code>advertisement_type</code> is <code>store_promotion</code>. Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
                video_attachment:
                  type: string
                  format: binary
                  description: 'This field is required when <code>advertisement_type</code> is <code>video_promotion</code>. Must be a file. Must not be greater than 5120 kilobytes.'
                  nullable: false
              required:
                - dates
                - advertisement_type
      security: []
  '/api/v1/vendor/advertisement/update/{id}':
    post:
      summary: ''
      operationId: postApiV1VendorAdvertisementUpdateId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: mqeopfuudtdsufvyvddqa
                  nullable: true
                description:
                  type: string
                  description: 'Must not be greater than 65000 characters.'
                  example: 'Molestias ipsam sit veniam sed fuga aspernatur.'
                  nullable: true
                dates:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                advertisement_type:
                  type: string
                  description: ''
                  example: store_promotion
                  nullable: false
                  enum:
                    - video_promotion
                    - store_promotion
                cover_image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
                profile_image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
                video_attachment:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 5120 kilobytes.'
                  nullable: true
              required:
                - id
                - dates
                - advertisement_type
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the update.'
        example: consequatur
        required: true
        schema:
          type: string
  /api/v1/vendor/advertisement/status:
    put:
      summary: ''
      operationId: putApiV1VendorAdvertisementStatus
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                status:
                  type: string
                  description: ''
                  example: approved
                  nullable: false
                  enum:
                    - paused
                    - approved
                pause_note:
                  type: string
                  description: 'This field is required when <code>status</code> is <code>paused</code>.'
                  example: null
                  nullable: false
                cancellation_note:
                  type: string
                  description: 'This field is required when <code>status</code> is <code>denied</code>.'
                  example: null
                  nullable: false
              required:
                - id
                - status
      security: []
  /api/v1/vendor/advertisement/copy-add-post:
    post:
      summary: ''
      operationId: postApiV1VendorAdvertisementCopyAddPost
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: mqeopfuudtdsufvyvddqa
                  nullable: true
                description:
                  type: string
                  description: 'Must not be greater than 65000 characters.'
                  example: 'Molestias ipsam sit veniam sed fuga aspernatur.'
                  nullable: true
                dates:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                advertisement_type:
                  type: string
                  description: ''
                  example: store_promotion
                  nullable: false
                  enum:
                    - video_promotion
                    - store_promotion
                cover_image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
                profile_image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
                video_attachment:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 5120 kilobytes.'
                  nullable: true
              required:
                - id
                - dates
                - advertisement_type
      security: []
  /api/v1/vendor/addon:
    get:
      summary: ''
      operationId: getApiV1VendorAddon
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/addon could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/addon could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/addon/store:
    post:
      summary: ''
      operationId: postApiV1VendorAddonStore
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                price:
                  type: number
                  description: ''
                  example: 11613.31890586
                  nullable: false
                translations:
                  type: object
                  description: ''
                  example: null
                  nullable: false
                  properties: {  }
              required:
                - name
                - price
      security: []
  /api/v1/vendor/addon/update:
    put:
      summary: ''
      operationId: putApiV1VendorAddonUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                price:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                translations:
                  type: object
                  description: ''
                  example: null
                  nullable: false
                  properties: {  }
              required:
                - id
                - name
                - price
      security: []
  /api/v1/vendor/addon/status:
    get:
      summary: ''
      operationId: getApiV1VendorAddonStatus
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/addon/status could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/addon/status could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                status:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - id
                - status
      security: []
  /api/v1/vendor/addon/delete:
    delete:
      summary: ''
      operationId: deleteApiV1VendorAddonDelete
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - id
      security: []
  /api/v1/vendor/banner:
    get:
      summary: ''
      operationId: getApiV1VendorBanner
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/banner could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/banner could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/banner/store:
    post:
      summary: ''
      operationId: postApiV1VendorBannerStore
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: 'Must not be greater than 2048 characters.'
                  example: vmqeopfuudtdsufvyvddq
                  nullable: false
              required:
                - image
      security: []
  /api/v1/vendor/banner/update:
    put:
      summary: ''
      operationId: putApiV1VendorBannerUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                image:
                  type: string
                  description: 'Must not be greater than 2048 characters.'
                  example: mqeopfuudtdsufvyvddqa
                  nullable: false
              required:
                - id
      security: []
  /api/v1/vendor/banner/status:
    get:
      summary: ''
      operationId: getApiV1VendorBannerStatus
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/banner/status could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/banner/status could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                status:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - id
                - status
      security: []
  /api/v1/vendor/banner/delete:
    delete:
      summary: ''
      operationId: deleteApiV1VendorBannerDelete
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - id
      security: []
  '/api/v1/vendor/banner/edit/{id}':
    get:
      summary: ''
      operationId: getApiV1VendorBannerEditId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/banner/edit/consequatur could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/banner/edit/consequatur could not be found.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the edit.'
        example: consequatur
        required: true
        schema:
          type: string
  /api/v1/vendor/categories:
    get:
      summary: ''
      operationId: getApiV1VendorCategories
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/categories could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/categories could not be found.'
      tags:
        - Endpoints
      security: []
  '/api/v1/vendor/categories/childes/{category_id}':
    get:
      summary: ''
      operationId: getApiV1VendorCategoriesChildesCategory_id
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/categories/childes/consequatur could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/categories/childes/consequatur could not be found.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: category_id
        description: 'The ID of the category.'
        example: consequatur
        required: true
        schema:
          type: string
  /api/v1/vendor/delivery-man/store:
    post:
      summary: ''
      operationId: postApiV1VendorDeliveryManStore
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                f_name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                identity_type:
                  type: string
                  description: ''
                  example: passport
                  nullable: false
                  enum:
                    - passport
                    - driving_license
                    - nid
                identity_number:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                email:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                phone:
                  type: string
                  description: 'Must match the regex /^([0-9\s\-\+\(\)]*)$/. Must be at least 10 characters.'
                  example: mqeopfuudtdsufvyvddqamniihfqcoynlazghdtqtqxbajwbpilpmufinllwloauydlsmsjuryv
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - f_name
                - identity_type
                - identity_number
                - email
                - phone
                - password
      security: []
  /api/v1/vendor/delivery-man/list:
    get:
      summary: ''
      operationId: getApiV1VendorDeliveryManList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/delivery-man/list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/delivery-man/list could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/delivery-man/preview:
    get:
      summary: ''
      operationId: getApiV1VendorDeliveryManPreview
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/delivery-man/preview could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/delivery-man/preview could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                delivery_man_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - delivery_man_id
      security: []
  /api/v1/vendor/delivery-man/status:
    get:
      summary: ''
      operationId: getApiV1VendorDeliveryManStatus
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/delivery-man/status could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/delivery-man/status could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                delivery_man_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                status:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - delivery_man_id
                - status
      security: []
  '/api/v1/vendor/delivery-man/update/{id}':
    post:
      summary: ''
      operationId: postApiV1VendorDeliveryManUpdateId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                f_name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                email:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: null
                  nullable: true
              required:
                - f_name
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the update.'
        example: consequatur
        required: true
        schema:
          type: string
  /api/v1/vendor/delivery-man/delete:
    delete:
      summary: ''
      operationId: deleteApiV1VendorDeliveryManDelete
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                delivery_man_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - delivery_man_id
      security: []
  /api/v1/vendor/delivery-man/search:
    post:
      summary: ''
      operationId: postApiV1VendorDeliveryManSearch
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                search:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - search
      security: []
  /api/v1/vendor/item/store:
    post:
      summary: ''
      operationId: postApiV1VendorItemStore
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                price:
                  type: number
                  description: 'Must be at least 0.01.'
                  example: 45
                  nullable: false
                discount:
                  type: number
                  description: 'Must be at least 0.'
                  example: 56
                  nullable: false
                translations:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - category_id
                - price
                - discount
                - translations
      security: []
  /api/v1/vendor/item/update:
    put:
      summary: ''
      operationId: putApiV1VendorItemUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                category_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                price:
                  type: number
                  description: 'Must be at least 0.01.'
                  example: 45
                  nullable: false
                discount:
                  type: number
                  description: 'Must be at least 0.'
                  example: 56
                  nullable: false
              required:
                - id
                - category_id
                - price
                - discount
      security: []
  /api/v1/vendor/item/delete:
    delete:
      summary: ''
      operationId: deleteApiV1VendorItemDelete
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/item/status:
    get:
      summary: ''
      operationId: getApiV1VendorItemStatus
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/item/status could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/item/status could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                status:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - id
                - status
      security: []
  '/api/v1/vendor/item/details/{id}':
    get:
      summary: ''
      operationId: getApiV1VendorItemDetailsId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/item/details/consequatur could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/item/details/consequatur could not be found.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the detail.'
        example: consequatur
        required: true
        schema:
          type: string
  /api/v1/vendor/item/search:
    post:
      summary: ''
      operationId: postApiV1VendorItemSearch
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - name
      security: []
  /api/v1/vendor/item/reviews:
    get:
      summary: ''
      operationId: getApiV1VendorItemReviews
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/item/reviews could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/item/reviews could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/item/reply-update:
    put:
      summary: ''
      operationId: putApiV1VendorItemReplyUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                reply:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: mqeopfuudtdsufvyvddqa
                  nullable: false
              required:
                - id
                - reply
      security: []
  /api/v1/vendor/item/recommended:
    get:
      summary: ''
      operationId: getApiV1VendorItemRecommended
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/item/recommended could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/item/recommended could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                status:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - id
                - status
      security: []
  /api/v1/vendor/item/organic:
    get:
      summary: ''
      operationId: getApiV1VendorItemOrganic
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/item/organic could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/item/organic could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                organic:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - id
                - organic
      security: []
  /api/v1/vendor/item/pending/item/list:
    get:
      summary: ''
      operationId: getApiV1VendorItemPendingItemList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/item/pending/item/list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/item/pending/item/list could not be found.'
      tags:
        - Endpoints
      security: []
  '/api/v1/vendor/item/requested/item/view/{id}':
    get:
      summary: ''
      operationId: getApiV1VendorItemRequestedItemViewId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/item/requested/item/view/consequatur could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/item/requested/item/view/consequatur could not be found.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the view.'
        example: consequatur
        required: true
        schema:
          type: string
  /api/v1/vendor/item/stock-update:
    put:
      summary: ''
      operationId: putApiV1VendorItemStockUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                current_stock:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - product_id
                - current_stock
      security: []
  /api/v1/vendor/item/stock-limit-list:
    get:
      summary: ''
      operationId: getApiV1VendorItemStockLimitList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/item/stock-limit-list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/item/stock-limit-list could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/pos/orders:
    get:
      summary: ''
      operationId: getApiV1VendorPosOrders
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/pos/orders could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/pos/orders could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/pos/place-order:
    post:
      summary: ''
      operationId: postApiV1VendorPosPlaceOrder
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paid_amount:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                payment_method:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                store_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - paid_amount
                - payment_method
                - store_id
      security: []
  /api/v1/vendor/pos/customers:
    get:
      summary: ''
      operationId: getApiV1VendorPosCustomers
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/pos/customers could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/pos/customers could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                search:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - search
      security: []
  /api/v1/vendor/message/list:
    get:
      summary: ''
      operationId: getApiV1VendorMessageList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/message/list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/message/list could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/message/search-list:
    get:
      summary: ''
      operationId: getApiV1VendorMessageSearchList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/message/search-list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/message/search-list could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - name
      security: []
  /api/v1/vendor/message/details:
    get:
      summary: ''
      operationId: getApiV1VendorMessageDetails
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vendor/message/details could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vendor/message/details could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/vendor/message/send:
    post:
      summary: ''
      operationId: postApiV1VendorMessageSend
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/config:
    get:
      summary: ''
      operationId: getApiV1Config
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/config could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/config could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/config/get-zone-id:
    get:
      summary: ''
      operationId: getApiV1ConfigGetZoneId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/config/get-zone-id could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/config/get-zone-id could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lat:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                lng:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - lat
                - lng
      security: []
  /api/v1/config/place-api-autocomplete:
    get:
      summary: ''
      operationId: getApiV1ConfigPlaceApiAutocomplete
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/config/place-api-autocomplete could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/config/place-api-autocomplete could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                search_text:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - search_text
      security: []
  /api/v1/config/distance-api:
    get:
      summary: ''
      operationId: getApiV1ConfigDistanceApi
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/config/distance-api could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/config/distance-api could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                origin_lat:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                origin_lng:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                destination_lat:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                destination_lng:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                mode:
                  type: string
                  description: ''
                  example: WALK
                  nullable: true
                  enum:
                    - DRIVE
                    - WALK
              required:
                - origin_lat
                - origin_lng
                - destination_lat
                - destination_lng
      security: []
  /api/v1/config/direction-api:
    get:
      summary: ''
      operationId: getApiV1ConfigDirectionApi
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/config/direction-api could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/config/direction-api could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                origin_lat:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                origin_lng:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                destination_lat:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                destination_lng:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - origin_lat
                - origin_lng
                - destination_lat
                - destination_lng
      security: []
  /api/v1/config/place-api-details:
    get:
      summary: ''
      operationId: getApiV1ConfigPlaceApiDetails
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/config/place-api-details could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/config/place-api-details could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                placeid:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - placeid
      security: []
  /api/v1/config/geocode-api:
    get:
      summary: ''
      operationId: getApiV1ConfigGeocodeApi
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/config/geocode-api could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/config/geocode-api could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lat:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                lng:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - lat
                - lng
      security: []
  /api/v1/config/get-PaymentMethods:
    get:
      summary: ''
      operationId: getApiV1ConfigGetPaymentMethods
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/config/get-PaymentMethods could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/config/get-PaymentMethods could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/testimonial:
    get:
      summary: ''
      operationId: getApiV1Testimonial
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/testimonial could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/testimonial could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/customer/order/cancellation-reasons:
    get:
      summary: ''
      operationId: getApiV1CustomerOrderCancellationReasons
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/order/cancellation-reasons could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/order/cancellation-reasons could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/customer/automated-message:
    get:
      summary: ''
      operationId: getApiV1CustomerAutomatedMessage
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/automated-message could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/automated-message could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/item/get-generic-name-list:
    get:
      summary: ''
      operationId: getApiV1ItemGetGenericNameList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/item/get-generic-name-list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/item/get-generic-name-list could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/item/get-allergy-name-list:
    get:
      summary: ''
      operationId: getApiV1ItemGetAllergyNameList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/item/get-allergy-name-list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/item/get-allergy-name-list could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/item/get-nutrition-name-list:
    get:
      summary: ''
      operationId: getApiV1ItemGetNutritionNameList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/item/get-nutrition-name-list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/item/get-nutrition-name-list could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/customer/order/parcel-instructions:
    get:
      summary: ''
      operationId: getApiV1CustomerOrderParcelInstructions
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/order/parcel-instructions could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/order/parcel-instructions could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/most-tips:
    get:
      summary: ''
      operationId: getApiV1MostTips
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/most-tips could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/most-tips could not be found.'
      tags:
        - Endpoints
      security: []
  '/api/v1/stores/details/{id}':
    get:
      summary: ''
      operationId: getApiV1StoresDetailsId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/stores/details/consequatur could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/stores/details/consequatur could not be found.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the detail.'
        example: consequatur
        required: true
        schema:
          type: string
  /api/v1/customer/get-data:
    post:
      summary: ''
      operationId: postApiV1CustomerGetData
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                external_base_url:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                external_token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - token
                - external_base_url
                - external_token
      security: []
  /api/v1/customer/external-update-data:
    post:
      summary: ''
      operationId: postApiV1CustomerExternalUpdateData
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bearer_token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                external_base_url:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                external_token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - bearer_token
                - token
                - external_base_url
                - external_token
      security: []
  /api/v1/customer/notifications:
    get:
      summary: ''
      operationId: getApiV1CustomerNotifications
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/notifications could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/notifications could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/customer/info:
    get:
      summary: ''
      operationId: getApiV1CustomerInfo
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/info could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/info could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/customer/update-zone:
    get:
      summary: ''
      operationId: getApiV1CustomerUpdateZone
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/update-zone could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/update-zone could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/customer/update-profile:
    post:
      summary: ''
      operationId: postApiV1CustomerUpdateProfile
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                email:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                image:
                  type: string
                  description: 'Must not be greater than 2048 characters.'
                  example: mqeopfuudtdsufvyvddqa
                  nullable: true
                password:
                  type: string
                  description: ''
                  example: null
                  nullable: true
              required:
                - name
      security: []
  /api/v1/customer/update-interest:
    post:
      summary: ''
      operationId: postApiV1CustomerUpdateInterest
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                interest:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - interest
      security: []
  /api/v1/customer/cm-firebase-token:
    put:
      summary: ''
      operationId: putApiV1CustomerCmFirebaseToken
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cm_firebase_token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - cm_firebase_token
      security: []
  /api/v1/customer/suggested-items:
    get:
      summary: ''
      operationId: getApiV1CustomerSuggestedItems
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/suggested-items could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/suggested-items could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/customer/trending-products:
    get:
      summary: ''
      operationId: getApiV1CustomerTrendingProducts
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/trending-products could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/trending-products could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/customer/remove-account:
    delete:
      summary: ''
      operationId: deleteApiV1CustomerRemoveAccount
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/customer/address/list:
    get:
      summary: ''
      operationId: getApiV1CustomerAddressList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/address/list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/address/list could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/customer/address/add:
    post:
      summary: ''
      operationId: postApiV1CustomerAddressAdd
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contact_person_name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                address_type:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                contact_person_number:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                longitude:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                latitude:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - contact_person_name
                - address_type
                - contact_person_number
                - address
                - longitude
                - latitude
      security: []
  '/api/v1/customer/address/update/{id}':
    put:
      summary: ''
      operationId: putApiV1CustomerAddressUpdateId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contact_person_name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                address_type:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                contact_person_number:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                longitude:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                latitude:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - contact_person_name
                - address_type
                - contact_person_number
                - address
                - longitude
                - latitude
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the update.'
        example: consequatur
        required: true
        schema:
          type: string
  /api/v1/customer/address/delete:
    delete:
      summary: ''
      operationId: deleteApiV1CustomerAddressDelete
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - address_id
      security: []
  /api/v1/customer/message/list:
    get:
      summary: ''
      operationId: getApiV1CustomerMessageList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/message/list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/message/list could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/customer/message/search-list:
    get:
      summary: ''
      operationId: getApiV1CustomerMessageSearchList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/message/search-list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/message/search-list could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - name
      security: []
  /api/v1/customer/message/details:
    get:
      summary: ''
      operationId: getApiV1CustomerMessageDetails
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/message/details could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/message/details could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/customer/message/send:
    post:
      summary: ''
      operationId: postApiV1CustomerMessageSend
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/customer/wish-list:
    get:
      summary: ''
      operationId: getApiV1CustomerWishList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/wish-list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/wish-list could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/customer/wish-list/add:
    post:
      summary: ''
      operationId: postApiV1CustomerWishListAdd
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: string
                  description: 'This field is required when <code>store_id</code> is not present.'
                  example: null
                  nullable: false
                store_id:
                  type: string
                  description: 'This field is required when <code>item_id</code> is not present.'
                  example: null
                  nullable: false
      security: []
  /api/v1/customer/wish-list/remove:
    delete:
      summary: ''
      operationId: deleteApiV1CustomerWishListRemove
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: string
                  description: 'This field is required when <code>store_id</code> is not present.'
                  example: null
                  nullable: false
                store_id:
                  type: string
                  description: 'This field is required when <code>item_id</code> is not present.'
                  example: null
                  nullable: false
      security: []
  /api/v1/customer/loyalty-point/point-transfer:
    post:
      summary: ''
      operationId: postApiV1CustomerLoyaltyPointPointTransfer
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                point:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 73
                  nullable: false
              required:
                - point
      security: []
  /api/v1/customer/loyalty-point/transactions:
    get:
      summary: ''
      operationId: getApiV1CustomerLoyaltyPointTransactions
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/loyalty-point/transactions could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/loyalty-point/transactions could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - limit
                - offset
      security: []
  /api/v1/customer/wallet/transactions:
    get:
      summary: ''
      operationId: getApiV1CustomerWalletTransactions
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/wallet/transactions could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/wallet/transactions could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - limit
                - offset
      security: []
  /api/v1/customer/wallet/bonuses:
    get:
      summary: ''
      operationId: getApiV1CustomerWalletBonuses
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/wallet/bonuses could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/wallet/bonuses could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/customer/wallet/add-fund:
    post:
      summary: ''
      operationId: postApiV1CustomerWalletAddFund
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  description: 'Must be at least 1.'
                  example: 73
                  nullable: false
                payment_method:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - amount
                - payment_method
      security: []
  /api/v1/customer/wallet/transfer-mart-to-drivemond:
    post:
      summary: ''
      operationId: postApiV1CustomerWalletTransferMartToDrivemond
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  description: 'Must be at least 1.'
                  example: 73
                  nullable: false
              required:
                - amount
      security: []
  /api/v1/customer/wallet/transfer-mart-from-drivemond:
    post:
      summary: ''
      operationId: postApiV1CustomerWalletTransferMartFromDrivemond
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currency:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                amount:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                bearer_token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                external_base_url:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                external_token:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - currency
                - amount
                - bearer_token
                - token
                - external_base_url
                - external_token
      security: []
  /api/v1/customer/visit-again:
    get:
      summary: ''
      operationId: getApiV1CustomerVisitAgain
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/visit-again could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/visit-again could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/customer/review-reminder:
    get:
      summary: ''
      operationId: getApiV1CustomerReviewReminder
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/review-reminder could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/review-reminder could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/customer/review-reminder-cancel:
    get:
      summary: ''
      operationId: getApiV1CustomerReviewReminderCancel
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/review-reminder-cancel could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/review-reminder-cancel could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - order_id
      security: []
  /api/v1/customer/order/list:
    get:
      summary: ''
      operationId: getApiV1CustomerOrderList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/order/list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/order/list could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                guest_id:
                  type: string
                  description: ''
                  example: null
                  nullable: false
              required:
                - limit
                - offset
      security: []
  /api/v1/customer/order/running-orders:
    get:
      summary: ''
      operationId: getApiV1CustomerOrderRunningOrders
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/order/running-orders could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/order/running-orders could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                guest_id:
                  type: string
                  description: ''
                  example: null
                  nullable: false
              required:
                - limit
                - offset
      security: []
  /api/v1/customer/order/details:
    get:
      summary: ''
      operationId: getApiV1CustomerOrderDetails
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/order/details could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/order/details could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - order_id
      security: []
  /api/v1/customer/order/place:
    post:
      summary: ''
      operationId: postApiV1CustomerOrderPlace
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_amount:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                payment_method:
                  type: string
                  description: ''
                  example: offline_payment
                  nullable: false
                  enum:
                    - cash_on_delivery
                    - digital_payment
                    - wallet
                    - offline_payment
                order_type:
                  type: string
                  description: ''
                  example: take_away
                  nullable: false
                  enum:
                    - take_away
                    - delivery
                    - parcel
                store_id:
                  type: string
                  description: 'This field is required unless <code>order_type</code> is in <code>parcel</code>.'
                  example: null
                  nullable: false
                distance:
                  type: string
                  description: 'This field is required unless <code>order_type</code> is in <code>take_away</code>.'
                  example: null
                  nullable: false
                address:
                  type: string
                  description: 'This field is required unless <code>order_type</code> is in <code>take_away</code>.'
                  example: null
                  nullable: false
                longitude:
                  type: string
                  description: 'This field is required unless <code>order_type</code> is in <code>take_away</code>.'
                  example: null
                  nullable: false
                latitude:
                  type: string
                  description: 'This field is required unless <code>order_type</code> is in <code>take_away</code>.'
                  example: null
                  nullable: false
                parcel_category_id:
                  type: string
                  description: 'This field is required when <code>order_type</code> is <code>parcel</code>.'
                  example: null
                  nullable: false
                receiver_details:
                  type: string
                  description: 'This field is required when <code>order_type</code> is <code>parcel</code>.'
                  example: null
                  nullable: false
                charge_payer:
                  type: string
                  description: 'This field is required when <code>order_type</code> is <code>parcel</code>.'
                  example: receiver
                  nullable: false
                  enum:
                    - sender
                    - receiver
                dm_tips:
                  type: number
                  description: ''
                  example: 11613.31890586
                  nullable: true
                guest_id:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                contact_person_name:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                contact_person_number:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                contact_person_email:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: null
                  nullable: false
              required:
                - order_amount
                - payment_method
                - order_type
      security: []
  /api/v1/customer/order/prescription/place:
    post:
      summary: ''
      operationId: postApiV1CustomerOrderPrescriptionPlace
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store_id:
                  type: string
                  description: 'This field is required unless <code>order_type</code> is in <code>parcel</code>.'
                  example: null
                  nullable: false
                order_attachment:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                distance:
                  type: string
                  description: 'This field is required unless <code>order_type</code> is in <code>take_away</code>.'
                  example: null
                  nullable: false
                address:
                  type: string
                  description: 'This field is required unless <code>order_type</code> is in <code>take_away</code>.'
                  example: null
                  nullable: false
                longitude:
                  type: string
                  description: 'This field is required unless <code>order_type</code> is in <code>take_away</code>.'
                  example: null
                  nullable: false
                latitude:
                  type: string
                  description: 'This field is required unless <code>order_type</code> is in <code>take_away</code>.'
                  example: null
                  nullable: false
                guest_id:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                contact_person_name:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                contact_person_number:
                  type: string
                  description: ''
                  example: null
                  nullable: false
              required:
                - order_attachment
      security: []
  /api/v1/customer/order/cancel:
    put:
      summary: ''
      operationId: putApiV1CustomerOrderCancel
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vmqeopfuudtdsufvyvddq
                  nullable: false
                guest_id:
                  type: string
                  description: ''
                  example: null
                  nullable: false
              required:
                - reason
      security: []
  /api/v1/customer/order/refund-request:
    post:
      summary: ''
      operationId: postApiV1CustomerOrderRefundRequest
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_reason:
                  type: string
                  description: 'Must not be greater than 254 characters.'
                  example: vmqeopfuudtdsufvyvddq
                  nullable: false
                refund_method:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: amniihfqcoynlazghdtqt
                  nullable: true
                customer_note:
                  type: string
                  description: 'Must not be greater than 65535 characters.'
                  example: qxbajwbpilpmufinllwlo
                  nullable: true
              required:
                - customer_reason
      security: []
  /api/v1/customer/order/refund-reasons:
    get:
      summary: ''
      operationId: getApiV1CustomerOrderRefundReasons
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/order/refund-reasons could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/order/refund-reasons could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/customer/order/track:
    get:
      summary: ''
      operationId: getApiV1CustomerOrderTrack
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/order/track could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/order/track could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                contact_number:
                  type: string
                  description: ''
                  example: null
                  nullable: false
              required:
                - order_id
      security: []
  /api/v1/customer/order/payment-method:
    put:
      summary: ''
      operationId: putApiV1CustomerOrderPaymentMethod
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                guest_id:
                  type: string
                  description: ''
                  example: null
                  nullable: false
      security: []
  /api/v1/customer/order/offline-payment:
    put:
      summary: ''
      operationId: putApiV1CustomerOrderOfflinePayment
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                method_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - order_id
                - method_id
      security: []
  /api/v1/customer/order/offline-payment-update:
    put:
      summary: ''
      operationId: putApiV1CustomerOrderOfflinePaymentUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - order_id
      security: []
  /api/v1/customer/cart/list:
    get:
      summary: ''
      operationId: getApiV1CustomerCartList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/customer/cart/list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/customer/cart/list could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                guest_id:
                  type: string
                  description: ''
                  example: null
                  nullable: false
      security: []
  /api/v1/customer/cart/add:
    post:
      summary: ''
      operationId: postApiV1CustomerCartAdd
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                guest_id:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                item_id:
                  type: integer
                  description: ''
                  example: 17
                  nullable: false
                model:
                  type: string
                  description: ''
                  example: ItemCampaign
                  nullable: false
                  enum:
                    - Item
                    - ItemCampaign
                price:
                  type: number
                  description: ''
                  example: 11613.31890586
                  nullable: false
                quantity:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 51
                  nullable: false
              required:
                - item_id
                - model
                - price
                - quantity
      security: []
  '/api/v1/customer/cart/cart_item/{id}/gift':
    post:
      summary: ''
      operationId: postApiV1CustomerCartCart_itemIdGift
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_gift:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - is_gift
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cart item.'
        example: consequatur
        required: true
        schema:
          type: string
  /api/v1/customer/cart/update:
    post:
      summary: ''
      operationId: postApiV1CustomerCartUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cart_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                guest_id:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                price:
                  type: number
                  description: ''
                  example: 11613.31890586
                  nullable: false
                quantity:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 51
                  nullable: false
              required:
                - cart_id
                - price
                - quantity
      security: []
  /api/v1/customer/cart/remove-item:
    delete:
      summary: ''
      operationId: deleteApiV1CustomerCartRemoveItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cart_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                guest_id:
                  type: string
                  description: ''
                  example: null
                  nullable: false
              required:
                - cart_id
      security: []
  /api/v1/customer/cart/remove:
    delete:
      summary: ''
      operationId: deleteApiV1CustomerCartRemove
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                guest_id:
                  type: string
                  description: ''
                  example: null
                  nullable: false
      security: []
  /api/v1/items/latest:
    get:
      summary: ''
      operationId: getApiV1ItemsLatest
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/items/latest could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/items/latest could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                category_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - store_id
                - category_id
                - limit
                - offset
      security: []
  /api/v1/items/new-arrival:
    get:
      summary: ''
      operationId: getApiV1ItemsNewArrival
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/items/new-arrival could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/items/new-arrival could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/items/popular:
    get:
      summary: ''
      operationId: getApiV1ItemsPopular
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/items/popular could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/items/popular could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/items/most-reviewed:
    get:
      summary: ''
      operationId: getApiV1ItemsMostReviewed
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/items/most-reviewed could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/items/most-reviewed could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/items/discounted:
    get:
      summary: ''
      operationId: getApiV1ItemsDiscounted
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/items/discounted could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/items/discounted could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/items/set-menu:
    get:
      summary: ''
      operationId: getApiV1ItemsSetMenu
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/items/set-menu could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/items/set-menu could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/items/search:
    get:
      summary: ''
      operationId: getApiV1ItemsSearch
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/items/search could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/items/search could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - name
      security: []
  /api/v1/items/search-suggestion:
    get:
      summary: ''
      operationId: getApiV1ItemsSearchSuggestion
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/items/search-suggestion could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/items/search-suggestion could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - name
      security: []
  '/api/v1/items/details/{id}':
    get:
      summary: ''
      operationId: getApiV1ItemsDetailsId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/items/details/consequatur could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/items/details/consequatur could not be found.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the detail.'
        example: consequatur
        required: true
        schema:
          type: string
  '/api/v1/items/related-items/{item_id}':
    get:
      summary: ''
      operationId: getApiV1ItemsRelatedItemsItem_id
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/items/related-items/consequatur could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/items/related-items/consequatur could not be found.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: item_id
        description: 'The ID of the item.'
        example: consequatur
        required: true
        schema:
          type: string
  '/api/v1/items/related-store-items/{item_id}':
    get:
      summary: ''
      operationId: getApiV1ItemsRelatedStoreItemsItem_id
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/items/related-store-items/consequatur could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/items/related-store-items/consequatur could not be found.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: item_id
        description: 'The ID of the item.'
        example: consequatur
        required: true
        schema:
          type: string
  '/api/v1/items/reviews/{item_id}':
    get:
      summary: ''
      operationId: getApiV1ItemsReviewsItem_id
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/items/reviews/consequatur could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/items/reviews/consequatur could not be found.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: item_id
        description: 'The ID of the item.'
        example: consequatur
        required: true
        schema:
          type: string
  '/api/v1/items/rating/{item_id}':
    get:
      summary: ''
      operationId: getApiV1ItemsRatingItem_id
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/items/rating/consequatur could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/items/rating/consequatur could not be found.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: item_id
        description: 'The ID of the item.'
        example: consequatur
        required: true
        schema:
          type: string
  /api/v1/items/recommended:
    get:
      summary: ''
      operationId: getApiV1ItemsRecommended
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/items/recommended could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/items/recommended could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/items/basic:
    get:
      summary: ''
      operationId: getApiV1ItemsBasic
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/items/basic could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/items/basic could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - limit
                - offset
      security: []
  /api/v1/items/suggested:
    get:
      summary: ''
      operationId: getApiV1ItemsSuggested
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/items/suggested could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/items/suggested could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - store_id
      security: []
  /api/v1/items/item-or-store-search:
    get:
      summary: ''
      operationId: getApiV1ItemsItemOrStoreSearch
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/items/item-or-store-search could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/items/item-or-store-search could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - name
      security: []
  /api/v1/items/reviews/submit:
    post:
      summary: ''
      operationId: postApiV1ItemsReviewsSubmit
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                order_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                rating:
                  type: number
                  description: 'Must not be greater than 5.'
                  example: 3
                  nullable: false
              required:
                - item_id
                - order_id
                - rating
      security: []
  /api/v1/items/common-conditions:
    get:
      summary: ''
      operationId: getApiV1ItemsCommonConditions
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/items/common-conditions could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/items/common-conditions could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - store_id
                - limit
                - offset
      security: []
  /api/v1/items/get-products:
    get:
      summary: ''
      operationId: getApiV1ItemsGetProducts
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/items/get-products could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/items/get-products could not be found.'
      tags:
        - Endpoints
      security: []
  '/api/v1/stores/get-stores/{filter_data}':
    get:
      summary: ''
      operationId: getApiV1StoresGetStoresFilter_data
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/stores/get-stores/consequatur could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/stores/get-stores/consequatur could not be found.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: filter_data
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
  /api/v1/stores/latest:
    get:
      summary: ''
      operationId: getApiV1StoresLatest
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/stores/latest could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/stores/latest could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/stores/popular:
    get:
      summary: ''
      operationId: getApiV1StoresPopular
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/stores/popular could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/stores/popular could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/stores/recommended:
    get:
      summary: ''
      operationId: getApiV1StoresRecommended
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/stores/recommended could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/stores/recommended could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/stores/discounted:
    get:
      summary: ''
      operationId: getApiV1StoresDiscounted
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/stores/discounted could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/stores/discounted could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/stores/top-rated:
    get:
      summary: ''
      operationId: getApiV1StoresTopRated
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/stores/top-rated could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/stores/top-rated could not be found.'
      tags:
        - Endpoints
      security: []
  '/api/v1/stores/popular-items/{id}':
    get:
      summary: ''
      operationId: getApiV1StoresPopularItemsId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/stores/popular-items/consequatur could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/stores/popular-items/consequatur could not be found.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the popular item.'
        example: consequatur
        required: true
        schema:
          type: string
  /api/v1/stores/reviews:
    get:
      summary: ''
      operationId: getApiV1StoresReviews
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/stores/reviews could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/stores/reviews could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - store_id
      security: []
  /api/v1/stores/search:
    get:
      summary: ''
      operationId: getApiV1StoresSearch
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/stores/search could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/stores/search could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - name
      security: []
  /api/v1/stores/get-data:
    get:
      summary: ''
      operationId: getApiV1StoresGetData
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/stores/get-data could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/stores/get-data could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/stores/top-offer-near-me:
    get:
      summary: ''
      operationId: getApiV1StoresTopOfferNearMe
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/stores/top-offer-near-me could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/stores/top-offer-near-me could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/get-combined-data:
    get:
      summary: ''
      operationId: getApiV1GetCombinedData
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/get-combined-data could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/get-combined-data could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                list_type:
                  type: string
                  description: ''
                  example: store
                  nullable: false
                  enum:
                    - item
                    - store
              required:
                - list_type
      security: []
  /api/v1/banners:
    get:
      summary: ''
      operationId: getApiV1Banners
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/banners could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/banners could not be found.'
      tags:
        - Endpoints
      security: []
  '/api/v1/banners/{store_id}':
    get:
      summary: ''
      operationId: getApiV1BannersStore_id
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/banners/1 could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/banners/1 could not be found.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: store_id
        description: 'The ID of the store.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/other-banners:
    get:
      summary: ''
      operationId: getApiV1OtherBanners
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/other-banners could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/other-banners could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/other-banners/video-content:
    get:
      summary: ''
      operationId: getApiV1OtherBannersVideoContent
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/other-banners/video-content could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/other-banners/video-content could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/other-banners/why-choose:
    get:
      summary: ''
      operationId: getApiV1OtherBannersWhyChoose
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/other-banners/why-choose could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/other-banners/why-choose could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/categories:
    get:
      summary: ''
      operationId: getApiV1Categories
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/categories could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/categories could not be found.'
      tags:
        - Endpoints
      security: []
  '/api/v1/categories/childes/{category_id}':
    get:
      summary: ''
      operationId: getApiV1CategoriesChildesCategory_id
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/categories/childes/consequatur could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/categories/childes/consequatur could not be found.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: category_id
        description: 'The ID of the category.'
        example: consequatur
        required: true
        schema:
          type: string
  /api/v1/categories/items/list:
    get:
      summary: ''
      operationId: getApiV1CategoriesItemsList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/categories/items/list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/categories/items/list could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                category_ids:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - limit
                - offset
                - category_ids
      security: []
  /api/v1/categories/stores/list:
    get:
      summary: ''
      operationId: getApiV1CategoriesStoresList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/categories/stores/list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/categories/stores/list could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                category_ids:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - limit
                - offset
                - category_ids
      security: []
  '/api/v1/categories/items/{category_id}':
    get:
      summary: ''
      operationId: getApiV1CategoriesItemsCategory_id
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/categories/items/consequatur could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/categories/items/consequatur could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - limit
                - offset
      security: []
    parameters:
      -
        in: path
        name: category_id
        description: 'The ID of the category.'
        example: consequatur
        required: true
        schema:
          type: string
  '/api/v1/categories/items/{category_id}/all':
    get:
      summary: ''
      operationId: getApiV1CategoriesItemsCategory_idAll
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/categories/items/consequatur/all could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/categories/items/consequatur/all could not be found.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: category_id
        description: 'The ID of the category.'
        example: consequatur
        required: true
        schema:
          type: string
  '/api/v1/categories/stores/{category_id}':
    get:
      summary: ''
      operationId: getApiV1CategoriesStoresCategory_id
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/categories/stores/consequatur could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/categories/stores/consequatur could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - limit
                - offset
      security: []
    parameters:
      -
        in: path
        name: category_id
        description: 'The ID of the category.'
        example: consequatur
        required: true
        schema:
          type: string
  /api/v1/categories/featured/items:
    get:
      summary: ''
      operationId: getApiV1CategoriesFeaturedItems
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/categories/featured/items could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/categories/featured/items could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - limit
                - offset
      security: []
  /api/v1/categories/popular:
    get:
      summary: ''
      operationId: getApiV1CategoriesPopular
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/categories/popular could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/categories/popular could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/common-condition:
    get:
      summary: ''
      operationId: getApiV1CommonCondition
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/common-condition could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/common-condition could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/common-condition/list:
    get:
      summary: ''
      operationId: getApiV1CommonConditionList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/common-condition/list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/common-condition/list could not be found.'
      tags:
        - Endpoints
      security: []
  '/api/v1/common-condition/items/{condition_id}':
    get:
      summary: ''
      operationId: getApiV1CommonConditionItemsCondition_id
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/common-condition/items/consequatur could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/common-condition/items/consequatur could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - limit
                - offset
      security: []
    parameters:
      -
        in: path
        name: condition_id
        description: 'The ID of the condition.'
        example: consequatur
        required: true
        schema:
          type: string
  /api/v1/brand:
    get:
      summary: ''
      operationId: getApiV1Brand
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/brand could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/brand could not be found.'
      tags:
        - Endpoints
      security: []
  '/api/v1/brand/items/{brand_id}':
    get:
      summary: ''
      operationId: getApiV1BrandItemsBrand_id
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/brand/items/consequatur could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/brand/items/consequatur could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                offset:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - limit
                - offset
      security: []
    parameters:
      -
        in: path
        name: brand_id
        description: 'The ID of the brand.'
        example: consequatur
        required: true
        schema:
          type: string
  /api/v1/campaigns/basic:
    get:
      summary: ''
      operationId: getApiV1CampaignsBasic
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/campaigns/basic could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/campaigns/basic could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/campaigns/basic-campaign-details:
    get:
      summary: ''
      operationId: getApiV1CampaignsBasicCampaignDetails
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/campaigns/basic-campaign-details could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/campaigns/basic-campaign-details could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                basic_campaign_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - basic_campaign_id
      security: []
  /api/v1/campaigns/item:
    get:
      summary: ''
      operationId: getApiV1CampaignsItem
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/campaigns/item could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/campaigns/item could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/flash-sales:
    get:
      summary: ''
      operationId: getApiV1FlashSales
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/flash-sales could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/flash-sales could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/flash-sales/items:
    get:
      summary: ''
      operationId: getApiV1FlashSalesItems
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/flash-sales/items could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/flash-sales/items could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                flash_sale_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - flash_sale_id
      security: []
  /api/v1/coupon/list/all:
    get:
      summary: ''
      operationId: getApiV1CouponListAll
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/coupon/list/all could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/coupon/list/all could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/coupon/list:
    get:
      summary: ''
      operationId: getApiV1CouponList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/coupon/list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/coupon/list could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/coupon/apply:
    get:
      summary: ''
      operationId: getApiV1CouponApply
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/coupon/apply could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/coupon/apply could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                store_id:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - code
                - store_id
      security: []
  /api/v1/cashback/list:
    get:
      summary: ''
      operationId: getApiV1CashbackList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/cashback/list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/cashback/list could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/cashback/getCashback:
    get:
      summary: ''
      operationId: getApiV1CashbackGetCashback
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/cashback/getCashback could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/cashback/getCashback could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - amount
      security: []
  /api/v1/parcel-category:
    get:
      summary: ''
      operationId: getApiV1ParcelCategory
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/parcel-category could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/parcel-category could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/advertisement/list:
    get:
      summary: ''
      operationId: getApiV1AdvertisementList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/advertisement/list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/advertisement/list could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v1/vehicle/extra_charge:
    get:
      summary: ''
      operationId: getApiV1VehicleExtra_charge
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/vehicle/extra_charge could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/vehicle/extra_charge could not be found.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                distance:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
              required:
                - distance
      security: []
  /api/v1/get-vehicles:
    get:
      summary: ''
      operationId: getApiV1GetVehicles
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/get-vehicles could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/get-vehicles could not be found.'
      tags:
        - Endpoints
      security: []
  /api/v2/ls-lib-update:
    post:
      summary: ''
      operationId: postApiV2LsLibUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
